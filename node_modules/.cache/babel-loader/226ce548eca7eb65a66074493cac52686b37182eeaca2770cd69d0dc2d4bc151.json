{"ast":null,"code":"var _jsxFileName = \"/Users/iustinherciu/Desktop/Client-Side Server Class/CIS-3344/Assignments/Iustin-assignment-5/Iustin-assignment-5/NyTimesDashboard/Frontend/ny-times-dashboard/src/Components/NyTimesDashboard.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NyTimesDashboard = () => {\n  _s();\n  const [articles, setArticles] = useState([]); // State to store the list of articles fetched from the API\n  const [name, setName] = useState(\"name\"); // State to track the selected month (default is January, represented by 1)\n\n  // Handles changes in the month input field and updates the `month` state\n  const handleInput = e => {\n    setName(e.target.value);\n  };\n\n  // Fetches articles from the NY Times API for the selected name\n  useEffect(() => {\n    const getArticles = async () => {\n      const res = await fetch(`$(process.env.NYT_API_KEY)$name=${name}`);\n    };\n  }, []);\n\n  // const getArticles = (e) => {\n  //     if (e) {\n  //         e.preventDefault();\n  //     }\n  //\n  //     // Making a GET request to the API with the selected month as a query parameter\n  //     fetch(`${process.env.REACT_APP_API_ARTICLES}?name=${name}`)\n  //         .then((response) => {\n  //             // Check if the response is successful, otherwise throw an error\n  //             if (!response.ok) throw new Error(\"Error fetching data\");\n  //             return response.json();\n  //         })\n  //         .then((data) => {\n  //             // Update the articles state with the fetched article data\n  //             setArticles(data.response.docs);\n  //         })\n  //         .catch((error) => {\n  //             // Log any errors that occur during the fetch process\n  //             console.error(error.message);\n  //         });\n  // };\n\n  // Create the form\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"New York Times Article Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"month\",\n        id: \"month\",\n        onChange: handleInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getArticles,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), articles && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: articles.map((articles, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: articles.headline.main\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: articles.abstract\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: articles.source\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(NyTimesDashboard, \"qYl6HoZQZD+eEkadiLySVrPpaww=\");\n_c = NyTimesDashboard;\nexport default NyTimesDashboard;\nvar _c;\n$RefreshReg$(_c, \"NyTimesDashboard\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","NyTimesDashboard","_s","articles","setArticles","name","setName","handleInput","e","target","value","getArticles","res","fetch","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onClick","map","index","headline","main","abstract","source","_c","$RefreshReg$"],"sources":["/Users/iustinherciu/Desktop/Client-Side Server Class/CIS-3344/Assignments/Iustin-assignment-5/Iustin-assignment-5/NyTimesDashboard/Frontend/ny-times-dashboard/src/Components/NyTimesDashboard.jsx"],"sourcesContent":["import {useEffect, useState} from \"react\";\n\nconst NyTimesDashboard = () => {\n\n    const [articles, setArticles] = useState([]); // State to store the list of articles fetched from the API\n    const [name, setName] = useState(\"name\");  // State to track the selected month (default is January, represented by 1)\n\n    // Handles changes in the month input field and updates the `month` state\n    const handleInput = (e) => {\n        setName(e.target.value);\n    }\n\n    // Fetches articles from the NY Times API for the selected name\n    useEffect(() => {\n        const getArticles = async () => {\n            const res = await fetch(`$(process.env.NYT_API_KEY)$name=${name}`);\n        }\n    }, []);\n\n\n    // const getArticles = (e) => {\n    //     if (e) {\n    //         e.preventDefault();\n    //     }\n    //\n    //     // Making a GET request to the API with the selected month as a query parameter\n    //     fetch(`${process.env.REACT_APP_API_ARTICLES}?name=${name}`)\n    //         .then((response) => {\n    //             // Check if the response is successful, otherwise throw an error\n    //             if (!response.ok) throw new Error(\"Error fetching data\");\n    //             return response.json();\n    //         })\n    //         .then((data) => {\n    //             // Update the articles state with the fetched article data\n    //             setArticles(data.response.docs);\n    //         })\n    //         .catch((error) => {\n    //             // Log any errors that occur during the fetch process\n    //             console.error(error.message);\n    //         });\n    // };\n\n    // Create the form\n    return (\n        <div>\n            {/* Title */}\n            <h1>New York Times Article Search</h1>\n\n            {/* Create the form that includes the button and the user input to search articles */}\n            <form>\n                <input type={\"text\"}\n                       name={\"month\"}\n                       id={\"month\"}\n                       onChange={handleInput}\n                />\n                <button onClick={getArticles}>\n                    Search\n                </button>\n            </form>\n\n            {articles && (\n                <div>\n                    {articles.map((articles, index) => (\n                        <div key={index}>\n                            <h2>{articles.headline.main}</h2>\n                            <p>{articles.abstract}</p>\n                            <p>{articles.source}</p>\n                        </div>\n                    ))}\n                </div>\n            )}\n        </div>\n\n    );\n};\n\nexport default NyTimesDashboard;"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAE;;EAE3C;EACA,MAAMS,WAAW,GAAIC,CAAC,IAAK;IACvBF,OAAO,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC3B,CAAC;;EAED;EACAb,SAAS,CAAC,MAAM;IACZ,MAAMc,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,mCAAmCR,IAAI,EAAE,CAAC;IACtE,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;;EAGN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,oBACIL,OAAA;IAAAc,QAAA,gBAEId,OAAA;MAAAc,QAAA,EAAI;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGtClB,OAAA;MAAAc,QAAA,gBACId,OAAA;QAAOmB,IAAI,EAAE,MAAO;QACbd,IAAI,EAAE,OAAQ;QACde,EAAE,EAAE,OAAQ;QACZC,QAAQ,EAAEd;MAAY;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACFlB,OAAA;QAAQsB,OAAO,EAAEX,WAAY;QAAAG,QAAA,EAAC;MAE9B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,EAENf,QAAQ,iBACLH,OAAA;MAAAc,QAAA,EACKX,QAAQ,CAACoB,GAAG,CAAC,CAACpB,QAAQ,EAAEqB,KAAK,kBAC1BxB,OAAA;QAAAc,QAAA,gBACId,OAAA;UAAAc,QAAA,EAAKX,QAAQ,CAACsB,QAAQ,CAACC;QAAI;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACjClB,OAAA;UAAAc,QAAA,EAAIX,QAAQ,CAACwB;QAAQ;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1BlB,OAAA;UAAAc,QAAA,EAAIX,QAAQ,CAACyB;QAAM;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAHlBM,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAGd,CAAC;AAAChB,EAAA,CAxEID,gBAAgB;AAAA4B,EAAA,GAAhB5B,gBAAgB;AA0EtB,eAAeA,gBAAgB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}