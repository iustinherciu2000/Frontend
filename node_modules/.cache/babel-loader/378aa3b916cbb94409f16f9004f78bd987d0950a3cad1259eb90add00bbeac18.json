{"ast":null,"code":"var _jsxFileName = \"/Users/iustinherciu/Desktop/Client-Side Server Class/CIS-3344/Assignments/Iustin-assignment-5/Iustin-assignment-5/NyTimesDashboard/Frontend/ny-times-dashboard/src/Components/NyTimesDashboard.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NyTimesDashboard = () => {\n  _s();\n  const [name, setName] = useState(); // State to track the selected month (default is January, represented by 1)\n  const [articles, setArticles] = useState(null); // State to store the list of articles fetched from the API\n\n  // Handles changes in the month input field and updates the `month` state\n  const handleInput = e => {\n    setMonth(e.target.value);\n  };\n\n  // Fetches articles from the NY Times API for the selected month\n  const getArticles = e => {\n    if (e) {\n      e.preventDefault();\n    }\n\n    // Making a GET request to the API with the selected month as a query parameter\n    fetch(`${process.env.REACT_APP_API_ENDPOINT}?month=${month}`).then(response => {\n      // Check if the response is successful, otherwise throw an error\n      if (!response.ok) throw new Error(\"Error fetching data\");\n      return response.json();\n    }).then(data => {\n      // Update the articles state with the fetched article data\n      setArticles(data.response.docs);\n    }).catch(error => {\n      // Log any errors that occur during the fetch process\n      console.error(error.message);\n    });\n  };\n\n  // Create the form\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"New York Times Article Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"month\",\n        id: \"month\",\n        onChange: handleInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getArticles,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), articles && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: articles.map((articles, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: articles.headline.main\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: articles.abstract\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: articles.source\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(NyTimesDashboard, \"/Bc5puwLWjOd5N2AdAD++QjZGqk=\");\n_c = NyTimesDashboard;\nexport default NyTimesDashboard;\nvar _c;\n$RefreshReg$(_c, \"NyTimesDashboard\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","NyTimesDashboard","_s","name","setName","articles","setArticles","handleInput","e","setMonth","target","value","getArticles","preventDefault","fetch","process","env","REACT_APP_API_ENDPOINT","month","then","response","ok","Error","json","data","docs","catch","error","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onClick","map","index","headline","main","abstract","source","_c","$RefreshReg$"],"sources":["/Users/iustinherciu/Desktop/Client-Side Server Class/CIS-3344/Assignments/Iustin-assignment-5/Iustin-assignment-5/NyTimesDashboard/Frontend/ny-times-dashboard/src/Components/NyTimesDashboard.jsx"],"sourcesContent":["import {useState} from \"react\";\n\nconst NyTimesDashboard = () => {\n\n    const [name, setName] = useState();  // State to track the selected month (default is January, represented by 1)\n    const [articles, setArticles] = useState(null); // State to store the list of articles fetched from the API\n\n    // Handles changes in the month input field and updates the `month` state\n    const handleInput = (e) => {\n        setMonth(e.target.value);\n    }\n\n    // Fetches articles from the NY Times API for the selected month\n    const getArticles = (e) => {\n        if (e) {\n            e.preventDefault();\n        }\n\n        // Making a GET request to the API with the selected month as a query parameter\n        fetch(`${process.env.REACT_APP_API_ENDPOINT}?month=${month}`)\n            .then((response) => {\n                // Check if the response is successful, otherwise throw an error\n                if (!response.ok) throw new Error(\"Error fetching data\");\n                return response.json();\n            })\n            .then((data) => {\n                // Update the articles state with the fetched article data\n                setArticles(data.response.docs);\n            })\n            .catch((error) => {\n                // Log any errors that occur during the fetch process\n                console.error(error.message);\n            });\n    };\n\n    // Create the form\n    return (\n        <div>\n            {/* Title */}\n            <h1>New York Times Article Search</h1>\n\n            {/* Create the form that includes the button and the user input to search articles */}\n            <form>\n                <input type={\"text\"}\n                       name={\"month\"}\n                       id={\"month\"}\n                       onChange={handleInput}\n                />\n                <button onClick={getArticles}>\n                    Search\n                </button>\n            </form>\n\n            {articles && (\n                <div>\n                    {articles.map((articles, index) => (\n                        <div key={index}>\n                            <h2>{articles.headline.main}</h2>\n                            <p>{articles.abstract}</p>\n                            <p>{articles.source}</p>\n                        </div>\n                    ))}\n                </div>\n            )}\n        </div>\n\n    );\n};\n\nexport default NyTimesDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}